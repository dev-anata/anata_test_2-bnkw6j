# API Service configuration for Data Processing Pipeline
# Version: v1
# Purpose: Exposes the API Gateway service internally with monitoring support
# Dependencies: Requires api-deployment.yaml for selector matching

apiVersion: v1
kind: Service

metadata:
  name: api-service
  namespace: ${namespace}
  labels:
    app: data-processing-pipeline
    component: api
    monitoring: enabled
  annotations:
    # Prometheus monitoring configuration
    prometheus.io/scrape: "true"
    prometheus.io/port: "80"
    prometheus.io/path: "/metrics"
    # Service annotations for internal load balancing
    cloud.google.com/neg: '{"ingress": true}'
    cloud.google.com/backend-config: '{"default": "api-backend-config"}'
    # Health check configuration
    cloud.google.com/health-check-path: "/health"

spec:
  # Using ClusterIP for internal service discovery and load balancing
  type: ClusterIP
  
  # Port configuration mapping external port 80 to container port 8000
  ports:
    - name: http  # Named port for explicit reference
      port: 80    # Service port
      targetPort: 8000  # Container port
      protocol: TCP
  
  # Selector matching labels from api-deployment
  selector:
    app: data-processing-pipeline
    component: api
  
  # Session affinity configuration for consistent routing
  sessionAffinity: None
  
  # Publishing not ready addresses disabled for high availability
  publishNotReadyAddresses: false