apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: data-processing-pipeline-ingress
  namespace: ${namespace}
  annotations:
    # Load Balancer Configuration
    kubernetes.io/ingress.class: "gce"
    # TLS/HTTPS Configuration
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    
    # Performance Tuning
    nginx.ingress.kubernetes.io/proxy-body-size: "8m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    
    # CORS Configuration
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    
    # Security Headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
    
    # Rate Limiting
    nginx.ingress.kubernetes.io/limit-rps: "100"
    
    # WAF Configuration
    nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"
  
  labels:
    app: data-processing-pipeline
    component: ingress
    environment: production
    managed-by: kubernetes

spec:
  tls:
    - hosts:
        - api.data-processing-pipeline.example.com
      secretName: data-processing-pipeline-tls
  
  rules:
    - host: api.data-processing-pipeline.example.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: api-service
                port:
                  number: 80