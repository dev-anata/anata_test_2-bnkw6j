# Security scanning workflow for Data Processing Pipeline
# Performs comprehensive security analysis including:
# - Dependency vulnerability scanning
# - Container image security scanning  
# - Code security analysis with CodeQL

name: Security Scan

on:
  # Run weekly security scan
  schedule:
    - cron: '0 0 * * 0'  # Every Sunday at midnight
  
  # Run on changes to backend or infrastructure code
  push:
    branches:
      - main
    paths:
      - 'src/backend/**'
      - 'infrastructure/**'
  
  pull_request:
    branches:
      - main
    paths:
      - 'src/backend/**'
      - 'infrastructure/**'

env:
  PYTHON_VERSION: '3.11'
  WORKING_DIRECTORY: './src/backend'
  DOCKER_IMAGE: 'data-processing-pipeline'
  SEVERITY_THRESHOLD: 'CRITICAL'

# Prevent concurrent workflow runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  dependency_scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install safety
        run: pip install safety

      - name: Scan dependencies
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: safety check -r requirements.txt

  container_scan:
    name: Container Image Scan
    runs-on: ubuntu-latest
    needs: [dependency_scan]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build image
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: docker build -t ${{ env.DOCKER_IMAGE }} .

      - name: Scan image
        uses: aquasecurity/trivy-action@0.11.2
        with:
          image-ref: ${{ env.DOCKER_IMAGE }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: ${{ env.SEVERITY_THRESHOLD }}

  code_analysis:
    name: Code Security Analysis
    runs-on: ubuntu-latest
    needs: [container_scan]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: python

      - name: Perform analysis
        uses: github/codeql-action/analyze@v2

  notify_failure:
    name: Create Issue on Failure
    needs: [dependency_scan, container_scan, code_analysis]
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: Create GitHub Issue
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'ðŸš¨ Security Scan Failure',
              body: `Security scan workflow failed on ${context.sha}\nWorkflow run: ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
              assignees: ['security-team'],
              labels: ['security', 'bug']
            })